FUNCTION Kruskal(vertices, edges):
    # Initialize the list to store the minimum spanning tree
    mst ← []

    # Sort the edges by their weights
    SORT(edges)

    # Create a union-find structure to track disjoint sets
    disjoint_sets ← UnionFind(vertices)

    # Iterate over each edge in the sorted list
    FOR edge IN edges:
        u, v, weight = edge

        # If u and v are in different sets, add the edge to the MST
        IF disjoint_sets.find(u) ≠ disjoint_sets.find(v):
            mst.APPEND(edge)
            disjoint_sets.union(u, v)

    # Return the final list of edges in the minimum spanning tree
    RETURN mst
